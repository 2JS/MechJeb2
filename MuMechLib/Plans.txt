* Convert to PartModule
        - Turn MechJebCore into its own PartModule
	    - Are there any Part class callbacks we use that don't exist anymore in PartModule?
        - Turn the classes that handle part animations into separate PartModules


* Explicit support for third-party ComputerModules?

* New GUI
	- Protractor-like icon?
		Look for a 2D artist
	- Choose either a new GUIStyle or create one from scratch.
	- Customizable info-windows: make lists with all the variables/titles, and allow the user to build his own windows

* Add a system for ComputerModules to easily have in-VAB GUI windows
	- Maybe just a drawEditorGUI() in addition to drawGUI()?
        - Figure out good way to make sure settings are saved if they're modified in the editor
          (onPartUpdate/onPartFixedUpdate don't get called there, and that's where MechJebCore currently saves settings)

* Change (most) orbital operations to create maneuver nodes
        - Might want to have two modes: a full-auto mode (like now) and a mode that just creates maneuver nodes

* Make the Core control more streamlined, and add RCS translation control

* Allow a "no-autopilot" mode (enabled/disabled via part.cfg?)
        - Requires separating all autopilot functionality from information displays
            - Split Ascent Stats into its own ComputerModule
            
* Create PartExtensions and VesselExtensions classes

* Move everything in ARUtils somewhere else:
        - Move vessel-related functions into VesselState and VesselExtensions
        - Move part-related functions into PartExtensions
        - Move random utilities into MuUtils

* Figure out multithreading to offload the FuelFlowAnalyzer and landing autopilot simulations

* Split up MechJebCore? 
  Possible parts that could be separated out:
        - GUI
        - ComputerModule callbacks
        - stuff that figures out which MechJebCore is controlling the vessel
        - attitude controller
        - thrust controller
        - warp controller
        - autostaging controller
        
* Add a check that will throttle down to prevent overheats during any sort of autopilot operation
        - can probably just move the ascent AP code that does this into the Core
        
* Allow auto-staging during any sort of autopilot operation
        - a toggle like in the ascent AP, but in the main menu?
        








